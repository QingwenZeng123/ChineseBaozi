ChineseBaozi {
       Program               = Statement+
       Statement             = VarDec
                             | AssignStmt
                             | PrintStmt
                             | WhileStmt
                             | ForStmt
                             | IfStmt
                             | BreathingStmt
                             | ReturnStmt
                                                                                      
      VarDec                  = Type id "=" Exp                                                                                                                                                                                        
      AssignStmt              = id  "="  Exp                                                                            
      PrintStmt               = print  "üê∑" Exp  "üê∑"                                                                  
      WhileStmt               = while  Exp Condition                                                                   
      ForStmt                 = for  Exp Condition                                                                      
      IfStmt                  = if Exp Condition                                                                        
      BreathingStmt           = breathing "ü¶îü¶îü¶îü¶îü¶îü¶îü¶îü¶îü¶îü¶îü¶îü¶î"                                                
      ReturnStmt              = return Exp  

      Condition               = "{" Statement* "}"
      
      Exp                     = not Exp7                                                                                    -- unary
                                     | Exp1
      Exp1                    = Exp1 or Exp2                                                                                 -- binary
                                     | Exp2
      Exp2                    = Exp2 and Exp3                                                                                -- binary
                                     | Exp3
      Exp3                    = Exp4 ("‚â§"|"<"|"=="|"‚â†"|"‚â•"|">") Exp4                                                        -- binary
                                     | Exp4
      Exp4                    = Exp4 ("+" | "-") Exp5                                                                        -- binary
                                     | Exp5
      Exp5                    = Exp5 ("*" | "√∑" | "%") Exp6                                                                  -- binary
                                     | Exp6
      Exp6                    = Exp7 "**" Exp6                                                                               -- binary
                                     | Exp7
      Exp7                    = bool
                                     | id
                                     | num
                                     | stringlit
                                     | charlit
                                     | "(" Exp ")"                                                                            --parens
                                     | "[" ListOf<Exp, ","> "]"                                                         --arrayOfExp
     Type                     = Type "[]"                                                                                --arrayVariable                                                                      
                                  | string
                                  | char
                                  | int
                                  | float
                                  | boolean

                                     
     print                    = "ÊâìÂç∞"  ~cjk
     while                    = "ÂΩì"  ~cjk
     for                      = "ÊØè‰∏Ä‰∏™"  ~cjk
     true                     = "Áúü"  ~cjk
     false                    = "ÂÅá"  ~cjk
     if                       = "Â¶ÇÊûú"  ~cjk
     not                      = "Èùû" ~cjk
     or                       = "Êàñ" ~cjk
     and                      = "‰∏î" ~cjk
     breathing                = "Âëº" ~cjk
     return                   = "ËøîÂõû" ~cjk
     
     
     string                   = "ËØç" ~cjk
     char                     = "Â≠ó" ~cjk
     int                      = "Êï¥Êï∞" ~cjk
     float                    = "Â∞èÊï∞" ~cjk
     boolean                  = "ÁúüÂÅá"~cjk
     array                    = "Êï∞ÁªÑ"~cjk
     
     keyword                  = print | while | for | if | true | false | not | or | and | breathing | string | char | int | float | return | array | boolean
     id                       = ~keyword cjk+
     cjk                      = "\u{4E00}".."\u{9FFF}"
     num                      = digit+ ("." digit+)?
     stringlit                = "\"" (~"\"" any)* "\"" 
     charlit                  = "'" (~"'" any) "'"
     bool                     = "Áúü" | "ÂÅá" 
     space                    += "üêï" (~"\n" any)*                                                                           --comment
}